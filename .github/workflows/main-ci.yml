name: Kryptokrona SDK Main Pipeline

on:
  push:
    branches:
      - master

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Assemble
        run: ./gradlew assemble

  static-code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: [ assemble ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Temporarily
        run: echo "hello"

#      - name: Checking Style
#        run: ./gradlew checkstyleMain
#
#      - name: Checking Duplicated Code
#        run: ./gradlew cpdCheck
#
#      - name: Checking Bugs
#        run: ./gradlew spotbugsMain
#
#      - name: Checking Code Standard
#        run: ./gradlew pmdMain

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: [ assemble ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Run Unit Test
        run: ./gradlew test

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: [ assemble ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Run Code Coverage
        run: echo "Hello"

  javadoc:
    name: Javadocs
    runs-on: ubuntu-latest
    needs: [ static-code-analysis, unit-test, code-coverage ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Generate JavaDoc
        run: ./gradlew javadoc

  publish:
    name: Publish Jar Package
    runs-on: ubuntu-latest
    needs: [ javadoc ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Publish Jar Package
        run: echo "Hello, this will be done later..."


#TODO: add stage to build javadoc ./gradlew javadoc and publish to github.io